//
//  MoviesPresenter.swift
//  Movee
//
//  Created by Hazal Eroglu on 23.12.2020.
//  Copyright (c) 2020 Oguz Tandogan. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import MoveeWebService

final class MoviesPresenter {

    // MARK: - Private properties -

    private unowned let view: MoviesViewInterface
    private let formatter: MoviesFormatterInterface
    private let interactor: MoviesInteractorInterface
    private let wireframe: MoviesWireframeInterface

    private let nowPlayingMoviesCallback = NowPlayingMoviesCallback()
    private let popularMoviesCallback = PopularMoviesCallback()
    
    // MARK: - Lifecycle -

    init(view: MoviesViewInterface, formatter: MoviesFormatterInterface, interactor: MoviesInteractorInterface, wireframe: MoviesWireframeInterface) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
    }
    
    func getNowPlayingMovies() {
        nowPlayingMoviesCallback.commonResult { [weak self] (result) in
            self?.handleNowPlayingMovies(result: result)
        }
        interactor.fetchNowPlayingMovies(callback: nowPlayingMoviesCallback, params: MoviesRequestModel())
    }
    
    private func handleNowPlayingMovies(result: Result<NowPlayingMoviesResponseModel, BaseErrorResponse>) {
        switch result {
        case .failure(let error):
            print(error)
        case .success(let success):
            formatter.loadNowPlayingMoviesData(model: success)
        }
    }
    
    func getPopularMovies() {
        popularMoviesCallback.commonResult { [weak self] result in
            self?.handlePopularMovies(result: result)
        }
        interactor.fetchPopularMovies(callback: popularMoviesCallback, params: MoviesRequestModel())
    }
    
    private func handlePopularMovies(result: Result<PopularMoviesResponseModel, BaseErrorResponse>) {
        switch result {
        case .failure(let error):
            print(error)
        case .success(let success):
            formatter.loadPopularMoviesData(model: success)
        }
    }
}

// MARK: - Extensions -

extension MoviesPresenter: MoviesPresenterInterface {
    
    func viewDidLoad() {
        getNowPlayingMovies()
    }
}
