//
//  LoginPresenter.swift
//  Movee
//
//  Created by Hazal Eroglu on 17.11.2020.
//  Copyright (c) 2020 Oguz Tandogan. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//


import Foundation
import Utilities
import MoveeComponents
import MoveeWebService
import SwiftKeychainWrapper

final class LoginPresenter {

    // MARK: - Private properties -

    private unowned let view: LoginViewInterface
    private let formatter: LoginFormatterInterface
    private let interactor: LoginInteractorInterface
    private let wireframe: LoginWireframeInterface
    
    private let loginCallback = LoginCallback()

    // MARK: - Lifecycle -

    init(view: LoginViewInterface, formatter: LoginFormatterInterface, interactor: LoginInteractorInterface, wireframe: LoginWireframeInterface) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
    }
    
    func getLoginSessionId(username: String?, password: String?) {
        loginCallback.commonResult { [weak self] (result) in
            self?.handleLoginResponse(result: result)
        }
        interactor.getSessionId(callback: loginCallback, params: LoginRequestModel(username: username, password: password, requestToken: KeychainWrapper.standard.string(forKey: "BasicToken")))
    }

    func handleLoginResponse(result: Result<SessionResponseModel, BaseErrorResponse>) {
        switch result {
        case .failure(let error):
            print(error)
        case .success(let success):
            print(success)
        }
    }
}

// MARK: - Extensions -

extension LoginPresenter: LoginPresenterInterface {
    func fireAuthenticationFlow(authentication: AuthenticationRequest) {
        
    }
    
    
    func viewDidLoad() {
    }
    

}
